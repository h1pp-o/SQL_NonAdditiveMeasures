
/*
Example of a table that addresses non-additive measures by precomputing them for each combination of dimensions 
    + creating a field for table partitioning for performing or as filter for dashboard to choose a certain aggregation level. 

Code may contain minor errors. I have removed potentially sensitive data from the original code.

*/


WITH CTE_preprocess AS (
	SELECT 
		EMP_FILE_NUMBER
	    ,EMP_METRIC_DATE
		,EMP_METRIC_DATE_YYYYMM
		,EMP_DIM_ETHNICITY
		,EMP_DIM_GENERATION
		,EMP_DIM_GENDER
		,EMP_DIM_DEPT
		,ISNULL(MAX(CASE WHEN fct.EMP_METRIC_NAME = 'EMP_ACTIVE_MB' THEN fct.METRIC_VALUE_FLAG END), 0) AS EMP_ACTIVE_MB
		,ISNULL(MAX(CASE WHEN fct.EMP_METRIC_NAME = 'EMP_ACTIVE_ME' THEN fct.METRIC_VALUE_FLAG END), 0) AS EMP_ACTIVE_ME
		,ISNULL(MAX(CASE WHEN fct.EMP_METRIC_NAME = 'EMP_TERMINATED_ME' THEN fct.METRIC_VALUE_FLAG END), 0) AS EMP_TERMINATED_ME
	FROM table1
	LEFT OUTER JOIN table2
		ON table2.EMP_FILE_NUMBER = table2.EMP_FILE_NUMBER
	GROUP BY 
		EMP_FILE_NUMBER
	    ,EMP_METRIC_DATE
		,EMP_METRIC_DATE_YYYYMM
		,EMP_DIM_ETHNICITY
		,EMP_DIM_GENERATION
		,EMP_DIM_GENDER
		,EMP_DIM_DEPT
)

, CTE_group AS (
	SELECT
		-- Dimensions
		COALESCE(EMP_DIM_ETHNICITY, '(overall)') AS EMP_DIM_ETHNICITY
		,COALESCE(EMP_DIM_GENERATION, '(overall)') AS EMP_DIM_GENERATION
		,COALESCE(EMP_DIM_GENDER, '(overall)') AS EMP_DIM_GENDER
		,COALESCE(EMP_DIM_DEPT, '(overall)') AS EMP_DIM_DEPT
		,COALESCE(EMP_METRIC_DATE_YYYYMM, '(overall)') AS EMP_METRIC_DATE_YYYYMM

		-- Metrics
		,SUM(EMP_ACTIVE_MB) AS EMP_ACTIVE_MB
		,SUM(EMP_ACTIVE_ME) AS EMP_ACTIVE_ME
		,SUM(EMP_TERMINATED_ME) AS EMP_TERMINATED_ME

		-- 2 Dimensions (4) 
		,CASE
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENERATION'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENDER'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_DEPT'
    
		-- 2 Dimensions (6)
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENERATION'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENDER'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_DEPT'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENERATION__EMP_DIM_GENDER'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENERATION__EMP_DIM_DEPT'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENDER__EMP_DIM_DEPT'
		-- 3 Dimensions (4)
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 1
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENERATION__EMP_DIM_GENDER'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 1 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENERATION__EMP_DIM_DEPT'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 0 AND GROUPING(EMP_DIM_GENERATION) = 1 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENDER__EMP_DIM_DEPT'
			WHEN GROUPING(EMP_DIM_ETHNICITY) = 1 AND GROUPING(EMP_DIM_GENERATION) = 0 AND GROUPING(EMP_DIM_GENDER) = 0 AND GROUPING(EMP_DIM_DEPT) = 0
				THEN 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_GENERATION__EMP_DIM_GENDER__EMP_DIM_DEPT'
		-- 4 Dimensions (1)
			ELSE 'EMP_METRIC_DATE_YYYYMM__EMP_DIM_ETHNICITY__EMP_DIM_GENERATION__EMP_DIM_GENDER__EMP_DIM_DEPT'
			END AS aggregation_level
	FROM CTE_preprocess
	GROUP BY GROUPING SETS (
		-- 1 Dimension: C(4,1) = 4
		(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENERATION)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENDER)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_DEPT)

		-- 2 Dimensions: C(4,2) = 6
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENERATION)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENDER)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_DEPT)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENERATION, EMP_DIM_GENDER)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENERATION, EMP_DIM_DEPT)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENDER, EMP_DIM_DEPT)

		-- 3 Dimensions: C(4,3) = 4
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_DEPT)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENDER, EMP_DIM_DEPT)
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT)

		-- 4 Dimensions: C(4,4) = 4
		,(EMP_METRIC_DATE_YYYYMM, EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT)
		
        )
)

, CTE_add_date_turnover AS (
	SELECT *
		,CAST(LEFT(EMP_METRIC_DATE_YYYYMM, 4) + '-' + RIGHT(EMP_METRIC_DATE_YYYYMM, 2) + '-' + '01' AS DATE) AS EMP_METRIC_DATE -- need to convert to date for window functions
		,EMP_TERMINATED_ME * 1.00 / NULLIF(EMP_ACTIVE_MB, 0) AS EMP_TURNOVER_ME
	FROM CTE_group
)

, CTE_add_YTD AS (
	SELECT
		*
		,SUM([EMP_ACTIVE_MB]) OVER (PARTITION BY aggregation_level, YEAR(EMP_METRIC_DATE), EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT) AS EMP_ACTIVE_YTD
		,SUM([EMP_TERMINATED_ME]) OVER (PARTITION BY aggregation_level, YEAR(EMP_METRIC_DATE), EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT) AS EMP_TERMINATED_YTD
		,SUM([EMP_TURNOVER_ME]) OVER (PARTITION BY aggregation_level, YEAR(EMP_METRIC_DATE), EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT) AS EMP_TURNOVER_YTD
	FROM CTE_add_date_turnover
)

, CTE_add_12MO AS (
	SELECT
		*
		,SUM([EMP_ACTIVE_MB]) OVER (PARTITION BY aggregation_level, EMP_DIM_ETHNICITY, EMP_DIM_GENERATION, EMP_DIM_GENDER, EMP_DIM_DEPT
			ORDER BY YEAR(EMP_METRIC_DATE) ASC ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS EMP_ACTIVE_Last12MO
	FROM CTE_add_YTD
)

, CTE_add_AVG AS (
	SELECT
		*
		,[EMP_ACTIVE_YTD] * 1.00 / MONTH([EMP_METRIC_DATE]) AS EMP_ACTIVE_YTD_AVG
		,[EMP_ACTIVE_Last12MO] * 1.00 / 12 AS EMP_ACTIVE_Last12MO_AVG
	FROM CTE_add_12MO
)

, CTE_add_projection AS (
	SELECT
		*
		,[EMP_TURNOVER_YTD] * 1.00 / MONTH([EMP_METRIC_DATE]) * 12 AS EMP_TURNOVER_PROJECTION_AVG
	FROM CTE_add_AVG
)

, Metadata AS (
    SELECT
        *
        ,GETDATE() AS InsertDT
        ,'(name of table)' AS DataSource
        ,'(name of ETL Job)' AS ETLProcess
    FROM CTE_add_projection
)

SELECT
	[EMP_DIM_ETHNICITY]
	,[EMP_DIM_GENERATION]
	,[EMP_DIM_GENDER]
	,[EMP_DIM_DEPT]
	,[EMP_METRIC_DATE]
	,[EMP_METRIC_DATE_YYYYMM]
	,[aggregation_level]
	,[EMP_ACTIVE_MB]
	,[EMP_ACTIVE_ME]
	,[EMP_ACTIVE_YTD]
	,[EMP_ACTIVE_YTD_AVG]
	,[EMP_ACTIVE_Last12MO]
	,[EMP_ACTIVE_Last12MO_AVG]
	,[EMP_TERMINATED_ME]
	,[EMP_TERMINATED_YTD]
	,[EMP_TURNOVER_ME]
	,[EMP_TURNOVER_YTD]
	,[EMP_TURNOVER_PROJECTION_AVG]
INTO '(new table name)'
FROM Metadata
GO
